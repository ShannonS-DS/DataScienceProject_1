library("ProjectTemplate", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
setwd("~/R/dataanalysis-master/dataanalysis-master/Projects/Assignment_1/Assignment_1")
create.project('assignment-1')
q()
setwd("~/R/dataanalysis-master/dataanalysis-master/Projects/Examples/exampleProject")
install.packages("maps")
setwd("~/R/dataanalysis-master/dataanalysis-master/Projects/Assignment_1/Assignment_1")
getwd()
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/loansData.csv", destfile = "../../data/loansData.csv")
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/loansData.csv", destfile = "/data/loansData.csv")
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/loansData.csv", destfile = "./data/loansData.csv")
dateDownloaded <- date()
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/loansData.rda", destfile = "./data/loansData.rda")
dateDownloaded <- date()
dateDownloaded
loansRaw <- read.csv("./data/loansData.rda")
save(loansRaw, dateDownloaded, file = "./data/loansDataRaw.rda")
head(loansRaw)
loansRaw <- read.csv("./data/loansData.csv")
save(loansRaw, dateDownloaded, file = "./data/loansDataRaw.rda")
head(loansRaw)
summary(loansRaw)
sapply(loansRaw[1, ], class)
sum(is.na(loansRaw))
q()
library("plyr", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("devtools", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("cluster", lib.loc="C:/Program Files/R/R-2.15.2/library")
library("bitops", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("class", lib.loc="C:/Program Files/R/R-2.15.2/library")
library("evaluate", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("ggplot2", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("knitr", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("labeling", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("lattice", lib.loc="C:/Program Files/R/R-2.15.2/library")
library("maps", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("markdown", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("MASS", lib.loc="C:/Program Files/R/R-2.15.2/library")
library("nlme", lib.loc="C:/Program Files/R/R-2.15.2/library")
library("reshape", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("reshape2", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("rstudio", lib.loc="C:/Program Files/RStudio/R/library")
library("scales", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("slidify", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("slidifyLibraries", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
library("testthat", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
setwd("~/R/dataanalysis-master/dataanalysis-master/Projects/Assignment_1/Assignment_1/data")
library("Hmisc", lib.loc="C:/Users/EBI-Dev/Documents/R/win-library/2.15")
loansRaw
loansRaw(13)
loansRaw[1:13]
loansRaw[1:13,] # limit record review to top 13 rows
class(loansRaw)
dim(loansRaw)
dim(loansRaw&FICO.Range)
dimnames(loansRaw)
class("FICO.Range")
class("Employment.Length")
head(loansRaw)
nrow(loansRaw)
summary(loansRaw)
sum(is.na(loansRaw))
is.na(loansRaw$Inquiries.in.the.Last.6.Months)
colMeans(loansRaw,na.rm=TRUE)
colSums(loansRaw$Inquiries.in.the.Last.6.Months)
inquiries <- loansRaw$Inquiries.in.the.Last.6.Months
colSums(inquiries)
colMeans(loansRaw,na.rm=TRUE)
colMeans(inquiries)
colMeans(inquiries,)
colMeans(,inquiries)
colMeans(loansRaw$Inquiries.in.the.Last.6.Months,na.rm=TRUE)
colMeans(loansRaw[1:13],na.rm=TRUE,)
colMeans(loansRaw[1:13],na.rm=TRUE)
subset(loansRaw[loansRaw$Amount.Requested > 0 & loansRaw$Amount.Funded.By.Investors > 0 & loansRaw$Interest.Rate > 0 & loansRaw$Debt.To.Income.Ratio > 0 & loansRaw$Monthly.Income > 0 & loansRaw$Open.CREDIT.Lines > 0 & loansRaw$Revolving.CREDIT.Balance > 0 & loansRaw$Inquiries.in.the.Last.6.Months > 0,c("AmtReq","AmtFunded","IntRate","DebtRatio","MoInc","OpLines","CreditBal","Inquiries")] # credit subset of numeric data
)
loansRawNumerics <- subset(x=loansRaw,subset=loansRaw$Amount.Requested > 0 & loansRaw$Amount.Funded.By.Investors > 0 & loansRaw$Interest.Rate > 0 & loansRaw$Debt.To.Income.Ratio > 0 & loansRaw$Monthly.Income > 0 & loansRaw$Open.CREDIT.Lines > 0 & loansRaw$Revolving.CREDIT.Balance > 0 & loansRaw$Inquiries.in.the.Last.6.Months > 0,select=c("Amount.Requested","Amount.Funded.By.Investors","Interest.Rate","Debt.To.Income.Ratio","Monthly.Income","Open.CREDIT.Lines","Revolving.CREDIT.Balance","Inquiries.in.the.Last.6.Months"))
head(loanRawNumerics)
loansRawNumerics <- subset(x=loansRaw,subset=loansRaw$Amount.Requested > 0 & loansRaw$Amount.Funded.By.Investors > 0 & loansRaw$Monthly.Income > 0 & loansRaw$Open.CREDIT.Lines > 0 & loansRaw$Revolving.CREDIT.Balance > 0 & loansRaw$Inquiries.in.the.Last.6.Months > 0,select=c("Amount.Requested","Amount.Funded.By.Investors","Interest.Rate","Debt.To.Income.Ratio","Monthly.Income","Open.CREDIT.Lines","Revolving.CREDIT.Balance","Inquiries.in.the.Last.6.Months"))
head(loanRawNumerics)
head(loansRawNumerics)
loansRawNumerics <- subset(x=loansRaw,subset=loansRaw$Amount.Requested > 0 & loansRaw$Amount.Funded.By.Investors > 0, select=c("Amount.Requested","Amount.Funded.By.Investors","Interest.Rate","Debt.To.Income.Ratio","Monthly.Income","Open.CREDIT.Lines","Revolving.CREDIT.Balance","Inquiries.in.the.Last.6.Months"))
head(loansRawNumerics)
# credit subset of numeric data
# credit subset of numeric data when loan amount is greater than 0 and amount requested is greater than 0
# credit subset of numeric data when loan amount is greater than 0 and amount requested is greater than 0; object name = loansRawNumerics
colMeans(loansRawNumerics,na.rm=TRUE)
summary(loansRawNumerics)
summary(loansRawNumerics, na.action=(na.omit(c(5:8, NA))))
summary(loansRawNumerics, na.rm=TRUE)
colMeans(loansRawNumerics$Monthly.Income,na.rm=TRUE)
colMeans(loansRawNumerics[,5],na.rm=TRUE)
colMeans(loansRawNumerics[1,5],na.rm=TRUE)
colMeans(loansRawNumerics,na.rm=TRUE)
colMeans(loansRawNumerics,na.rm=TRUE,dims+1)
colMeans(loansRawNumerics,na.rm=TRUE, dims = 2)
colMeans(loansRawNumerics,na.rm=TRUE, dims = 1:4)
colMeans(loansRawNumerics[,1:4],na.rm=TRUE, dims = 2)
colMeans(loansRawNumerics[,1:4],na.rm=TRUE)
colMeans(loansRawNumerics[,5],na.rm=TRUE)
colMeans(loansRawNumerics[,5],na.rm=TRUE, dims = 3)
colMeans(loansRawNumerics[,5],na.rm=TRUE, dims = 2)
loansRawNumerics.colSums(loansRawNumerics, ,[5:8], na.rm = TRUE)
loansRawNumerics.colSums(loansRawNumerics, ,5:8, na.rm = TRUE)
colSums(loansRawNumerics, ,5:8, na.rm = TRUE)
colSums(loansRawNumerics, , 5:8 na.rm = TRUE)
colSums(loansRawNumerics, ,5:8, na.rm = TRUE)
colSums(loansRawNumerics, , , na.rm = TRUE)
colSums(loansRawNumerics, na.rm = TRUE)
colSums(loansRawNumerics, 5 ,5, na.rm = TRUE)
colSums(loansRawNumerics, ,, na.rm = TRUE)
summary(loansRawNumerics, na.rm=TRUE)
quantile(loansRaw$Open.CREDIT.Lines)
quantile(loansRaw$Open.CREDIT.Lines, na.rm = TRUE)
class(loansRaw)
class(loansRaw$Interest.Rate)
sapply(loansRaw[1, ], class)
head(loansRaw)
unique(loansRaw$FICO.Range)
length(unique(loansRaw$FICO.Range))
table(loansRaw$FICO.Range)
table(loansRaw$FICO.Rangec,loansRaw$Employment.Interest.Rate)
table(loansRaw$FICO.Range,loansRaw$Employment.Interest.Rate)
unique(loansRaw$Employment.Interest.Rate))
unique(loansRaw$Employment.Interest.Rate)
unique(loansRaw$Interest.Rate)
table(loansRaw$FICO.Range,loansRaw$Interest.Rate)
q()
